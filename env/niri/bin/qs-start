#!/bin/bash

parse_ini() {
    awk '
        BEGIN { section = "" }
        /^\[.*\]$/ {
            gsub(/\[|\]/, "", $0)
            section = tolower($0)
            next
        }
        /^[^#;][^=]*=[^=]*$/ {
            key = $1
            sub(/^[ \t]+/, "", key)
            sub(/[ \t]+$/, "", key)

            value = substr($0, index($0, "=") + 1)
            sub(/^[ \t]+/, "", value)
            sub(/;.*$/, "", value)
            sub(/[ \t]+$/, "", value)

            if (section != "")
                print section "." key "=" value
        }
    ' "$1"
}

is_valid_identifier() { [[ "$1" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; }

normalize_value() {
    case "$1" in
    true | false) printf '%s' "$1" ;;
    '' | *[!0-9]*) printf '"%s"' "$1" ;;
    *) printf '%s' "$1" ;;
    esac
}

to_js_object() {
    local last_section=""
    while IFS='=' read -r full_key raw_val; do
        section="${full_key%%.*}"
        key="${full_key#*.}"

        if [[ "$section" != "$last_section" ]]; then
            [[ -n "$last_section" ]] && echo '  },'
            echo "  $section: {"
            last_section="$section"
        fi

        is_valid_identifier "$key" && outkey="$key" || outkey="\"$key\""
        val=$(normalize_value "$raw_val")
        echo "    $outkey: $val,"
    done
    echo '  }'
}

generate_js() {
    echo '// Auto-generated by parse-config; do not edit'
    echo 'let settings = {'
    parse_ini "$1" | to_js_object
    echo '};'
}

generate_js "${1:-$HOME/.config/quickshell/config.ini}" >"$HOME/.config/quickshell/generated_config.js"
qs
